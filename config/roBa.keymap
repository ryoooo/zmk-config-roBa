#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 10>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 11>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp SQT>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R         &kp T                                                         &kp Y            &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F         &kp G            &kp UP_ARROW                &kp DOWN_ARROW   &kp H            &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V         &kp B            &kp LEFT_ARROW              &kp RIGHT_ARROW  &kp N            &kp M  &kp COMMA  &kp DOT  &kp SLASH
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt 6 DELETE  &lt 1 BACKSPACE  &lt_to_layer_0 2 SPACE      &lt 3 ENTER      &lt 2 LC(SPACE)                             &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        Number {
            bindings = <
&trans  &trans  &trans  &trans  &trans                          &trans     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp PERIOD  &kp MINUS  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp EQUAL   &kp N0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans      &trans                                               &trans
            >;
        };

        Symbol {
            bindings = <
&kp LS(NUMBER_1)            &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                                              &kp LS(NUMBER_6)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)   &kp LS(NUMBER_0)
&kp SLASH                   &kp KP_NUMBER_4   &kp KP_NUMBER_5   &kp KP_NUMBER_6   &kp ASTERISK      &kp LC(LA(KP_NUMBER_0))      &kp GRAVE      &kp MINUS         &kp EQUAL         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SLASH
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1   &kp KP_NUMBER_2   &kp KP_NUMBER_3   &kp PERIOD        &kp EQUAL                    &kp LS(GRAVE)  &kp LS(MINUS)     &kp LS(DOLLAR)    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp BACKSLASH
&trans                      &trans            &trans            &trans            &trans            &trans                       &trans         &trans                                                                   &kp LS(BACKSLASH)
            >;
        };

        Function {
            bindings = <
&kp F1          &kp F2                  &kp F3  &kp F4                   &kp F5                                  &kp F6  &kp F7                  &kp F8       &kp F9                   &kp F10
&kp HOME        &trans                  &trans  &trans                   &trans  &kp PAGE_UP      &kp PAGE_DOWN  &trans  &kp LC(LG(LEFT_ARROW))  &kp LG(TAB)  &kp LC(LG(RIGHT_ARROW))  &kp F11
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans  &kp LG(LS(RIGHT_ARROW))  &trans  &kp HOME         &kp END        &trans  &kp LG(LS(LEFT_ARROW))  &kp LG(D)    &kp LG(LS(RIGHT_ARROW))  &kp F12
&trans          &trans                  &trans  &trans                   &trans  &trans           &trans         &trans                                                                &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q      &to_layer_0 W     &to_layer_0 E     &to_layer_0 R    &to_layer_0 T                                               &to_layer_0 Y          &to_layer_0 U      &lt 5 I            &to_layer_0 O      &to_layer_0 P
&to_layer_0 A      &to_layer_0 S     &to_layer_0 D     &to_layer_0 F    &to_layer_0 G     &to_layer_0 UP         &to_layer_0 DOWN   &mkp_exit_AML MB5      &mkp_exit_AML MB1  &mkp MB3           &mkp_exit_AML MB2  &to_layer_0 SEMICOLON
&to_layer_0 Z      &to_layer_0 X     &to_layer_0 C     &to_layer_0 V    &to_layer_0 B     &to_layer_0 LEFT       &to_layer_0 RIGHT  &mkp_exit_AML MB4      &to_layer_0 M      &to_layer_0 COMMA  &to_layer_0 DOT    &to_layer_0 FSLH
&to_layer_0 LCTRL  &to_layer_0 LGUI  &to_layer_0 LALT  &to_layer_0 DEL  &to_layer_0 BSPC  &to_layer_0 SPACE      &to_layer_0 RET    &to_layer_0 LC(SPACE)                                                           &to_layer_0 RIGHT_SHIFT
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&bootloader  &trans        &trans        &trans        &trans                                 &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans       &trans        &trans        &trans        &trans  &trans      &trans             &trans        &trans        &trans        &trans        &trans
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader        &trans        &trans        &trans        &trans        &bt BT_CLR
&trans       &trans        &trans        &trans        &trans  &trans      &kp LA(BACKSLASH)  &kp F23                                                 &bt BT_CLR_ALL
            >;
        };
    };
};
